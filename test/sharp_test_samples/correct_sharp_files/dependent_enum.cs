// This file was automatically generated by DependoBuf.
// Please do not change it.

using System;
using System.Collections.Generic;

class dbuf {

public class First {
	public readonly int a;
	public readonly int b;
	public int a1;
	public bool b1;

	public First(int a_, int b_) {
		a = a_;
		b = b_;
	}

	public bool Check() {
		return true;
	}
}

public class Dependent_First {
	private readonly bool IsConstructable;
	public readonly Type[] Restrictions = {typeof(First)};

	public Dependent_First(int a_, int b_) {
		IsConstructable = true && a_ == 5 && b_ == b;
	}
	public bool Check() {
		return IsConstructable;
	}
}

public class Second {
	public readonly int a;
	public readonly int b;
	public bool a2;
	public int b2;

	public Second(int a_, int b_) {
		a = a_;
		b = b_;
	}

	public bool Check() {
		return true;
	}
}

public class Dependent_Second {
	private readonly bool IsConstructable;
	public readonly Type[] Restrictions = {typeof(Second)};

	public Dependent_Second(int a_, int b_) {
		IsConstructable = true && a_ == a && b_ == 1;
	}
	public bool Check() {
		return IsConstructable;
	}
}

public class Third {
	public readonly int a;
	public readonly int b;
	public string a3;
	public string b3;

	public Third(int a_, int b_) {
		a = a_;
		b = b_;
	}

	public bool Check() {
		return true;
	}
}

public class Dependent_Third {
	public readonly int a;
	public readonly int b;
	dynamic value;

	public Dependent_Third(int a_, int b_) {
		a = a_;
		b = b_;
	}
	public bool Check() {
		return false || (value is Third) && value.Check() && value.a == a && value.b == b;
	}
}

public class Now {
	public readonly int a;
	public readonly int b;
	public int c;
	public Dependent_b d1;
	public Dependent_a_b d2;

	public Now(int a_, int b_) {
		a = a_;
		b = b_;
		d1 = new Dependent_b((a + b));
	}

	public bool Check() {
		return true && d2.Check(c, (c + c)) && d1.Check((c + b));
	}
}

}

