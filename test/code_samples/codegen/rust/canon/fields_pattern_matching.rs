#![allow(unused_variables, unused_imports, unused_parens, dead_code)]
//! This file was automatically generated by DependoBuf

pub enum FieldsPatternMatching {
    Constructor1,
    Constructor2{
        numbern: std::rc::Rc<Type>,
        field: std::rc::Rc<Type>,
    },
    Constructor3{
        numbern: std::rc::Rc<Type>,
        numberm: std::rc::Rc<Type>,
    },
    Constructor4{
        numberm: std::rc::Rc<Type>,
    },
    Constructor5,
    Constructor6,
}
use FieldsPatternMatching::*;

impl FieldsPatternMatching {
    pub fn check(&self, n: &std::rc::Rc<Nat>, m: &std::rc::Rc<Nat>) -> bool {
        match self {
            Constructor1 {  } => {
            }
            Constructor2 { numbern, field } => {
                if !numbern.check() { return false; }
                if !field.check() { return false; }
            }
            Constructor3 { numbern, numberm } => {
                if !numbern.check() { return false; }
                if !numberm.check() { return false; }
            }
            Constructor4 { numberm } => {
                if !numberm.check() { return false; }
            }
            Constructor5 {  } => {
            }
            Constructor6 {  } => {
            }
        }
        return true;
    }
}

