name: CI

on:
  pull_request:
    branches: [ "main", "dev" ]
    paths:
      - ".github/workflows/**"
      - "Dockerfile.*"
      - "lib/**"
      - "src/**"
      - "test/**"
      - "CMakeLists.txt"
      - ".clang-*"


env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  CC: clang-16
  CXX: clang++-16

  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/dbuf

jobs:
  tidy:
    name: Check codestyle using clang-tidy
    permissions: write-all
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: build-${{ env.BUILD_TYPE }}-${{ github.event_name == 'pull_request' && github.event.number || github.ref }}
        restore-keys: |
          build-${{ env.BUILD_TYPE }}-${{ github.event_name == 'pull_request' && github.event.number || github.ref }}
          build-${{ env.BUILD_TYPE }}-

    - name: clang-tidy review
      id: review
      uses: ZedThree/clang-tidy-review@v0.17.0
      with:
        apt_packages: libfl-dev,flex,bison,clang-16,libc++-16-dev,libc++abi-16-dev,ccache
        clang_tidy_version: 16
        cmake_command: >
          ccache --set-config=cache_dir=/github/workspace/.ccache &&
          ccache -p &&
          cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -D CMAKE_C_COMPILER_LAUNCHER=ccache -D CMAKE_CXX_COMPILER_LAUNCHER=ccache &&
          cmake --build ${{github.workspace}}/build --target dbuf &&
          ccache -s
        build_dir: ${{github.workspace}}/build
        config_file: .clang-tidy
        include: '*.h,*.cc'

    - if: steps.review.outputs.total_comments > 0
      run: exit 1

  format:
    name: Format the code using clang-format
    permissions: write-all
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{github.workspace}}

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Format
      uses: DoozyX/clang-format-lint-action@v0.16.1
      with:
        source: 'lib src test'
        exclude: ''
        extensions: 'h,cc'
        clangFormatVersion: 16
        inplace: True

    - name: Suggest
      uses: getsentry/action-git-diff-suggestions@main
      with:
        message: 'clang-format suggested changes'

    - name: Fail if changes
      run: git diff --exit-code

  docker:
    name: Build and push Docker image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          file: Dockerfile.runtime
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
