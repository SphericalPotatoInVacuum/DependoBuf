#pragma once

#include <fstream>
#include <iostream>
#include <memory>
#include <string>
#include <vector>

#include "core/ast/ast.h"

namespace dbuf::gen {

static const std::string kReadme = "// This file was automatically generated by DependoBuf.\n"
                                   "// Please do not change it.\n";

class SharpPrinter {
public:
    SharpPrinter() = default;

    explicit SharpPrinter(std::shared_ptr<std::ofstream> output);

    void init_file();

    void PrintVariables(
        std::basic_ostream<char> &out,
        const std::vector<ast::TypedVariable> &variables,
        std::string &&delimeter,
        bool with_types,
        bool add_last_delimeter,
        bool as_dependency);

private:
    std::shared_ptr<std::ofstream> out_ = nullptr;
};

} // namespace dbuf::gen
